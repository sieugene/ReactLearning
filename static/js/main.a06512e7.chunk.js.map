{"version":3,"sources":["Api/Api.js","redux/UsersPage-Reducer.js","assets/preloader/preloader.svg","Components/Dialogs/MessagesForm.module.css","Components/Dialogs/Dialogs.module.css","Components/Profile/Profile.module.css","assets/FormControl/FormsControls.module.css","assets/FormControl/FormsControls.jsx","Components/Profile/ProfileDataForm.jsx","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/ProfileData.jsx","Components/Profile/Profile.jsx","redux/ProfilePage-Reducer.js","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","redux/Auth-Reducer.js","redux/App-Reducer.js","Components/Header/HeaderContainer.jsx","Components/utils/validators/validators.js","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","Components/SecondSidebar/SecondSidebar.jsx","Components/Sidebar/SIdebar.jsx","Components/Dialogs/Dialog.jsx","redux/Dialogs-Reducer.js","Components/Dialogs/MessageForm.js","Components/Dialogs/Messages.jsx","Components/Dialogs/MessagesContainer.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","App.js","serviceWorker.js","redux/store-redux.js","index.js","assets/preloader/Preloader.jsx","Components/Sidebar/Sidebar.module.css","assets/images/userPhoto.png","Components/Header/Header.module.css","assets/preloader/preloader.module.css"],"names":["instance","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","pageSize","pageNumber","get","then","response","data","getUsersTerm","text","ProfileAPI","getProfile","userId","getStatus","updateStatus","newStatus","put","status","updateProfile","profile","uploadPhoto","photos","formData","FormData","append","FollowAPI","followUser","id","post","unfollowUser","delete","meAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","DialogsAPI","startChatting","getAllDialogs","getListMessagesWithFriend","sendMessageToFriend","newMessage","body","isViewedYourMessage","messageId","messageInSpam","deleteMessage","restoreMessage","returnMessageThanDate","date","listNewMessage","initialState","UsersList","totalUsers","currentPage","searchTerm","isFetching","followingInProgress","followAC","type","unFollowAC","setUsersAC","setUsersTotalCount","setSearchTermAC","toggleIsFetchingAC","toggleFollowingInProgressAC","getUsersThunkCreator","dispatch","a","async","items","totalCount","setCurrentPageThunkCreator","setSearchTermTextThunkCreator","followUnfollowFlow","methoApi","action","unFollowUserThunkCreator","followUserThunkCreator","UsersPageReducer","state","map","u","followed","filter","module","exports","InputMessage","input","meta","props","activeError","touched","error","s","className","FormControl","InputAuth","Contact","contactTitle","contactBody","href","target","rel","Field","placeholder","name","component","ReduxEditProfile","reduxForm","form","infoProfile","onSubmit","handleSubmit","saveButton","someError","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","key","ProfileStatusWithHooks","React","memo","useState","editMode","setEditMode","setStatus","activateEditMode","deactivateEditMode","updateStatusUserThunk","onChangeTextStatus","e","currentTarget","value","useEffect","urlMatchParams","onChange","autoFocus","onBlur","onDoubleClick","data-tooltip","ProfileData","editButton","onClick","setEditProfile","Profile","Preloader","editProfile","profileContain","loading","mainBlock","avatarBlock","src","small","large","userPhoto","alt","files","length","uploadNewPhotoThunk","htmlFor","initialValues","updateProfileUserThunk","setUserProfileAC","setStatusUserAC","uploadNewPhotoAC","setLoadingAC","getProfileThunkCreator","profilePageReducer","ProfileContainer","this","getProfileThunk","setStatusUserThunk","match","params","prevProps","prevState","snapshot","path","to","Component","compose","connect","profilePage","Auth","setUser","resultCode","alert","getState","messageError","messages","stopSubmit","_error","Promise","reject","withRouter","Header","header","container","isAuth","loginBlock","logoutThunk","loginBtn","setAuthUserAC","authMeThunkCreator","getCaptchaThunkCreator","url","authReducer","initialized","initializedUserPhotoAC","HeaderContainer","initiliazedUserPhotoThunk","app","promise","required","ReduxLoginForm","validate","Login","loginThunk","style","color","LoginContainer","getCaptchaThunk","SecondSidebar","sidebar","Sidebar","activeClassName","active","Dialog","dialogUser","dialog","userNameWithImg","userName","newMessagesCount","listDialogs","messagesWithFriend","countNesMessages","currentUserInChat","setMessagesListWithFriendAC","setSuccessLoadingAC","getListMessagesWithFriendThunkCreator","console","log","all","values","sendMessageToFriendThunkCreator","DialogsReducer","allDialogs","ReduxMessageForm","Messages","getCurrentUserPhoto","getUserPhoto","authUserPhoto","messagesContain","chatTittle","mainChatBlock","chatBody","past__messages","getReturnMessageDateThunk","m","viewed","messagesWithFriendId","notViewedMessage","main__img__username","senderId","senderName","chatText","sendMessageToFriendThunk","dialogs","getListMessagesWithFriendThunk","Dialogs","containerDialog","render","startChattingThunk","getAllDialogsThunk","getListNewMessagesThunk","UsersContainer","lazy","App","catchAllUnhandelErrors","promiseRejectionEvent","reason","message","initiliazedThunk","window","addEventListener","fallback","exact","Boolean","location","hostname","reducers","combineReducers","userPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloadContain","preloadImg","preloader"],"mappings":"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","file":"static/js/main.a06512e7.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n//создаем образец, чтобы не дублировать код\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"a6c20467-1a5b-406b-88d2-a8a4879b1b99\"\r\n    }\r\n})\r\n//группировка методов\r\nexport const UsersAPI = {\r\n    getUsers(pageSize,pageNumber){\r\n        return instance.get(`users?count=${pageSize}&page=${pageNumber}`)\r\n            .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUsersTerm(pageSize,text){\r\n        return instance.get(`users?count=${pageSize}&page=1&term=${text}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`/profile/status/` + userId);\r\n    },\r\n    updateStatus(newStatus){\r\n        return instance.put(`/profile/status`,{status: newStatus})\r\n    },\r\n    updateProfile(profile){\r\n        return instance.put(`/profile`,profile)\r\n    },\r\n    uploadPhoto(photos) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\",photos);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const FollowAPI = {\r\n    followUser(id){\r\n        return instance.post(`follow/${id}`,{})\r\n    },\r\n    unfollowUser(id){\r\n        return instance.delete(`follow/${id}`, {})\r\n    }\r\n}\r\n\r\nexport const meAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email,password,rememberMe = false,captcha = null){\r\n        return instance.post(`auth/login`,{email,password,rememberMe,captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\nexport const DialogsAPI = {\r\n    startChatting(userId){\r\n        return instance.put(`dialogs/${userId}`)\r\n    },\r\n    getAllDialogs(){\r\n        return instance.get(`dialogs`)\r\n    },\r\n    getListMessagesWithFriend(userId ){\r\n        return instance.get(`dialogs/${userId}/messages`)\r\n    },\r\n    sendMessageToFriend(userId,newMessage){\r\n        return instance.post(`dialogs/${userId}/messages`,{body: newMessage})\r\n    },\r\n    isViewedYourMessage(messageId){\r\n        return instance.get(`dialogs/messages/${messageId}/viewed`)\r\n    },\r\n    messageInSpam(messageId){\r\n        return instance.post(`dialogs/messages/${messageId}/spam`)\r\n    },\r\n    deleteMessage(messageId){\r\n        return instance.delete(`dialogs/messages/${messageId}`)\r\n    },\r\n    restoreMessage(messageId){\r\n        return instance.put(`dialogs/messages/${messageId}/restore`)\r\n    },\r\n    returnMessageThanDate(userId,date){\r\n        return instance.get(`dialogs/${userId}/messages/new?newerThen=${date}`)\r\n    },\r\n    listNewMessage(){\r\n        return instance.get(`dialogs/messages/new/count`)\r\n    }\r\n}","import {FollowAPI, UsersAPI} from \"../Api/Api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst SET_SEARCH_TERM = 'SET_SEARCH_TERM';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    UsersList: [],\r\n    pageSize: 15,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    searchTerm: '',\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersList: state.UsersList.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                UsersList: state.UsersList.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                UsersList: action.UsersList,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n        case SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                searchTerm: action.text\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => {\r\n    return {\r\n        type: FOLLOW, userId\r\n    }\r\n}\r\nexport const unFollowAC = (userId) => {\r\n    return {\r\n        type: UNFOLLOW, userId\r\n    }\r\n}\r\nexport const setUsersAC = (UsersList) => {\r\n    return {\r\n        type: SET_USERS, UsersList\r\n    }\r\n}\r\nexport const setCurrentPageAC = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE, currentPage\r\n    }\r\n}\r\nexport const setUsersTotalCount = (totalUsers) => {\r\n    return {\r\n        type: SET_USERS_TOTAL_COUNT, totalUsers\r\n    }\r\n}\r\nexport const setSearchTermAC = (text) => {\r\n    return {\r\n        type: SET_SEARCH_TERM, text\r\n    }\r\n}\r\nexport const toggleIsFetchingAC = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING, isFetching\r\n    }\r\n}\r\nexport const toggleFollowingInProgressAC = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_PROGRESS,\r\n        isFetching, userId\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = (pageSize, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true));\r\n        let response = await UsersAPI.getUsers(pageSize, currentPage)\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(response.items));\r\n        dispatch(setUsersTotalCount(response.totalCount));\r\n    }\r\n}\r\n\r\nexport const setCurrentPageThunkCreator = (pageSize, pageNumber) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true));\r\n        dispatch(setCurrentPageAC(pageNumber));\r\n        let response = await UsersAPI.getUsers(pageSize, pageNumber)\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(response.items));\r\n        dispatch(setUsersTotalCount(response.totalCount));\r\n    }\r\n}\r\n\r\nexport const setSearchTermTextThunkCreator = (pageSize, text) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true));\r\n        dispatch(setSearchTermAC(text));\r\n        if(!text){\r\n            text = ' ';\r\n        }\r\n        let response = await UsersAPI.getUsersTerm(pageSize, text)\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(response.items));\r\n        dispatch(setUsersTotalCount(response.totalCount));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, methoApi, action) => {\r\n    dispatch(toggleFollowingInProgressAC(true, userId))\r\n    await methoApi(userId)\r\n    dispatch(action(userId));\r\n    dispatch(toggleFollowingInProgressAC(false, userId));\r\n}\r\n\r\n\r\nexport const unFollowUserThunkCreator = (userId) => (dispatch) => {\r\n    return followUnfollowFlow(dispatch, userId, FollowAPI.unfollowUser, unFollowAC)\r\n}\r\n\r\n\r\nexport const followUserThunkCreator = (userId) => (dispatch) => {\r\n    return followUnfollowFlow(dispatch, userId, FollowAPI.followUser, followAC)\r\n}\r\n\r\n\r\nexport default UsersPageReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.03527c20.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MessagesForm_container__1E9I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerDialog\":\"Dialogs_containerDialog__2rlqT\",\"listDialogs\":\"Dialogs_listDialogs__D2yhu\",\"dialogUser\":\"Dialogs_dialogUser__2M4qS\",\"userNameWithImg\":\"Dialogs_userNameWithImg__1MabI\",\"messagesContain\":\"Dialogs_messagesContain__2Q53f\",\"NotViews\":\"Dialogs_NotViews__3BNMO\",\"messagesWithFriendId\":\"Dialogs_messagesWithFriendId__2dsjK\",\"dialog\":\"Dialogs_dialog__ui60H\",\"notViewedMessage\":\"Dialogs_notViewedMessage__1Yyep\",\"main__img__username\":\"Dialogs_main__img__username__3Q4DR\",\"chatText\":\"Dialogs_chatText__ykFpP\",\"mainChatBlock\":\"Dialogs_mainChatBlock__UykZ1\",\"chatTittle\":\"Dialogs_chatTittle__TLYfq\",\"chatBody\":\"Dialogs_chatBody__1P2mT\",\"past__messages\":\"Dialogs_past__messages__N3XFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someError\":\"Profile_someError__2zNhG\",\"profileContain\":\"Profile_profileContain__S9NYC\",\"mainBlock\":\"Profile_mainBlock__3U1ie\",\"avatarBlock\":\"Profile_avatarBlock__1Zq8w\",\"uploadPhoto\":\"Profile_uploadPhoto__1mx1L\",\"editButton\":\"Profile_editButton__1FM-9\",\"saveButton\":\"Profile_saveButton__1iZ-G\",\"infoProfile\":\"Profile_infoProfile__gGw29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"FormsControls_FormControl__3MfD4\",\"error\":\"FormsControls_error__22-w1\",\"someError\":\"FormsControls_someError__2DiAh\"};","import React from \"react\";\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const InputMessage = ({input, meta, ...props}) => {\r\n    let activeError = meta.touched && meta.error ? s.error : ' ';\r\n    return (\r\n        <div className={s.FormControl}>\r\n            <div className={activeError}>\r\n                <input {...input} {...props} /><br/>\r\n                {meta.touched && meta.error && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport const InputAuth = ({input, meta, ...props}) => {\r\n    let activeError = meta.touched && meta.error ? s.error : ' ';\r\n    return (\r\n        <div className={s.FormControl}>\r\n            <div className={activeError}>\r\n                <input {...input} {...props} /><br/>\r\n                {meta.touched && meta.error && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport const InputSearch = ({input, meta, ...props}) => {\r\n    let activeError = meta.touched && meta.error ? s.error : ' ';\r\n    return (\r\n        <div className={s.FormControl}>\r\n            <div className={activeError}>\r\n                <input {...input} {...props} /><br/>\r\n                {meta.touched && meta.error && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputMessage} from \"../../assets/FormControl/FormsControls\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <div className={s.infoProfile}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <button className={s.saveButton}>Save</button>\r\n                {props.error &&\r\n                    <div className={s.someError}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n                <br/>\r\n                <span><b>About me: </b> <p>{props.profile.aboutMe}</p></span>\r\n                <Field placeholder='About me' name='aboutMe' component={InputMessage}/>\r\n                <span><b>Full name: </b> <p>{props.profile.fullName}</p></span>\r\n                <Field placeholder='Full Name' name='fullName' component={InputMessage}/>\r\n                <span><b>Seek work: </b> <p>{props.profile.lookingForAJob ? 'yes' : 'no'}</p></span>\r\n                <Field placeholder='Looking for a job' type=\"checkbox\" name='lookingForAJob' component={InputMessage}/>\r\n                <span><b>Description of the search: </b> <p>{props.profile.lookingForAJobDescription}</p></span>\r\n                <Field placeholder='Looking for a job desc' name='lookingForAJobDescription' component={InputMessage}/>\r\n                {Object.keys(props.profile.contacts).map(key =>\r\n                    <Contact key={key} contactTitle={key} contactBody={props.profile.contacts[key]}/>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = ({contactTitle, contactBody}) => {\r\n    return (\r\n        <div>\r\n             <span>\r\n                <b>{contactTitle}: </b>\r\n                    <p>\r\n                        <a href={contactBody} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {contactBody}\r\n                        </a>\r\n                    </p>\r\n            </span>\r\n            <Field placeholder={`https://www.${contactTitle}.com`}\r\n                   name={`contacts.${contactTitle}`} component={InputMessage}/>\r\n        </div>\r\n    )\r\n}\r\nconst ReduxEditProfile = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ReduxEditProfile;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = React.memo(props => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusUserThunk(props.id, status)\r\n    }\r\n    let onChangeTextStatus = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    //сохранение значения поля статуса при переходах.\r\n    //вместо componentDidUpdate\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n    //строка , [props.status], означает Перезапускать эффект только если props.status поменялся\r\n\r\n    const withEditStatus = () => {\r\n        //проверка страницы, если страница пользователя, то можно редактировать.\r\n        if (props.urlMatchParams == props.id) {\r\n            if (!editMode) {\r\n                return <span onDoubleClick={activateEditMode} data-tooltip=\"double click to change\">{props.status}</span>\r\n            } else {\r\n                return <input onChange={onChangeTextStatus} autoFocus={true}\r\n                              onBlur={deactivateEditMode} value={status}/>\r\n            }\r\n        } else {\r\n            //просто вывод\r\n            return <div>\r\n                {!props.status ? <div>_____</div> : props.status}\r\n            </div>\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {withEditStatus()}\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default ProfileStatusWithHooks","import s from \"./Profile.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={s.infoProfile}>\r\n            <div className={s.editButton}>\r\n                {props.id == props.urlMatchParams &&\r\n                <button onClick={() => {\r\n                    props.setEditProfile(true)\r\n                }}>Edit\r\n                </button>\r\n                }\r\n            </div>\r\n            <hr/>\r\n            <span><b>About me: </b> <p>{props.profile.aboutMe}</p></span>\r\n            <span><b>Full name: </b> <p>{props.profile.fullName}</p></span>\r\n            <span><b>Status:</b> <p>{props.status}</p></span>\r\n            <span><b>Seek work: </b> <p>{props.profile.lookingForAJob ? 'yes' : 'no'}</p></span>\r\n            <span><b>Description of the search: </b> <p>{props.profile.lookingForAJobDescription}</p></span>\r\n            {Object.keys(props.profile.contacts).map(key =>\r\n                <Contact key={key} contactTitle={key} contactBody={props.profile.contacts[key]}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst Contact = ({contactTitle, contactBody}) => {\r\n    return (\r\n        <div>\r\n            {!!contactBody &&\r\n            <span>\r\n                <b>{contactTitle}: </b>\r\n                    <p>\r\n                        <a href={contactBody} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {contactBody}\r\n                        </a>\r\n                    </p>\r\n            </span>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport Preloader from \"../../assets/preloader/Preloader\";\r\nimport s from './Profile.module.css';\r\nimport ReduxEditProfile from \"./ProfileDataForm\";\r\n\r\nimport userPhoto from './../../assets/images/userPhoto.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileData from \"./ProfileData\";\r\n\r\nconst Profile = React.memo(props => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let [editProfile, setEditProfile] = useState(false);\r\n    //update profile\r\n    const onSubmit = (formData) => {\r\n        if (formData === props.profile) {\r\n            setEditProfile(false)\r\n        } else {\r\n            props.updateProfileUserThunk(formData).then(() => {\r\n                setEditProfile(false)\r\n            })\r\n        }\r\n    }\r\n    //upload photo\r\n    let onUploadNewPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.uploadNewPhotoThunk(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.profileContain}>\r\n            {props.loading ? <Preloader/> :\r\n                <div className={s.mainBlock}>\r\n                    <div className={s.avatarBlock}>\r\n                        <img src={!props.profile.photos.small ? userPhoto : props.profile.photos.large} alt=''/>\r\n                        {props.id == props.urlMatchParams &&\r\n                        // upload photo for myProfile\r\n                        <div>\r\n                            <input type=\"file\" name=\"myFile\" id=\"myFile\" onChange={onUploadNewPhoto}/>\r\n                            <label htmlFor=\"myFile\" className={s.uploadPhoto}\r\n                                   data-tooltip=\"click to upload a photo\"> </label>\r\n                        </div>\r\n                        }\r\n                        <h3>{props.profile.fullName}</h3>\r\n                        <ProfileStatusWithHooks status={props.status}\r\n                                                updateStatusUserThunk={props.updateStatusUserThunk}\r\n                                                id={props.id}\r\n                                                urlMatchParams={props.urlMatchParams}/>\r\n                    </div>\r\n                    {editProfile ?\r\n                        <ReduxEditProfile initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/>\r\n                        :\r\n                        <ProfileData profile={props.profile}\r\n                                     status={props.status}\r\n                                     updateStatusUserThunk={props.updateStatusUserThunk}\r\n                                     id={props.id}\r\n                                     urlMatchParams={props.urlMatchParams}\r\n                                     setEditProfile={setEditProfile}\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Profile\r\n","import {ProfileAPI} from \"../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_NEW_PHOTO = 'SET_NEW_PHOTO'\r\nconst SET_SUCCESS_LOADING = 'SET_SUCCESS_LOADING'\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status: \"\",\r\n    loading: false\r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_NEW_PHOTO:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos:action.photos}\r\n            }\r\n        case SET_SUCCESS_LOADING:\r\n            return{\r\n                ...state,\r\n                loading: action.loading\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserProfileAC = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n}\r\nexport const setStatusUserAC = (status) => {\r\n    return {\r\n        type: SET_STATUS, status\r\n    }\r\n}\r\nexport const uploadNewPhotoAC = (photos) => {\r\n    return {\r\n        type: SET_NEW_PHOTO, photos\r\n    }\r\n}\r\nexport const setLoadingAC = (loading) => {\r\n    return{\r\n        type: SET_SUCCESS_LOADING, loading\r\n    }\r\n}\r\nexport const getProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        if (!userId) {\r\n            //none\r\n        } else {\r\n            ProfileAPI.getProfile(userId)\r\n                .then(response => {\r\n                    dispatch(setUserProfileAC(response.data));\r\n                })\r\n        }\r\n    }\r\n}\r\n//получение статуса пользователя\r\nexport const setStatusUserThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        if (!userId) {\r\n            //none\r\n        } else {\r\n            ProfileAPI.getStatus(userId).then(response => {\r\n                dispatch(setStatusUserAC(response.data))\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const updateStatusUserThunkCreator = (userId, newStatus) => {\r\n    return (dispatch) => {\r\n        //проверка на изменение входящего текста\r\n        ProfileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatusUserAC(response.data))\r\n            if (!newStatus) {\r\n                alert('field empty')\r\n            } else {\r\n                if (response.data !== newStatus) {\r\n                    dispatch(setLoadingAC(true));\r\n                    ProfileAPI.updateStatus(newStatus).then(response => {\r\n                        if (response.data.resultCode === 0) {\r\n                            dispatch(setStatusUserAC(newStatus))\r\n                            dispatch(setLoadingAC(false));\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        //end\r\n    }\r\n}\r\nexport const updateProfileUserThunkCreator = (profile) => (dispatch, getState) => {\r\n    return ProfileAPI.updateProfile(profile).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            const userId = getState().Auth.id;\r\n            dispatch(getProfileThunkCreator(userId));\r\n        } else {\r\n            let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"editProfile\", {_error: messageError}))\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const uploadNewPhotoThunkCreator = (photos) => async(dispatch) => {\r\n    dispatch(setLoadingAC(true));\r\n    let response =  await ProfileAPI.uploadPhoto(photos)\r\n    dispatch(setLoadingAC(false));\r\n    if(response.data.resultCode === 0){\r\n        dispatch(uploadNewPhotoAC(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profilePageReducer;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunkCreator,\r\n    setStatusUserThunkCreator,\r\n    setUserProfileAC, updateProfileUserThunkCreator, updateStatusUserThunkCreator, uploadNewPhotoThunkCreator\r\n} from \"../../redux/ProfilePage-Reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateProfile(userId) {\r\n        this.props.getProfileThunk(userId);\r\n        this.props.setStatusUserThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Установка профиля пользователя\r\n        //проверяем из url пользователя по параметрам\r\n        let userId = this.props.match.params.userId;\r\n        this.updateProfile(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //обновление профилей при смене url\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateProfile(this.props.match.params.userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //добавление url\r\n        if (!this.props.match.params.userId) {\r\n            if (!this.props.id) {\r\n                return <Redirect to={'/login'}/>\r\n            } else {\r\n                let path = `/profile/${this.props.id}`;\r\n                return <Redirect to={path}/>\r\n            }\r\n        }\r\n        return (\r\n                <Profile profile={this.props.profile} status={this.props.status}\r\n                         updateStatusUserThunk={this.props.updateStatusUserThunk}\r\n                         id={this.props.id}\r\n                    //math params для изменения статуса\r\n                         urlMatchParams={this.props.match.params.userId}\r\n                         updateProfileUserThunk={this.props.updateProfileUserThunk}\r\n                         uploadNewPhotoThunk={this.props.uploadNewPhotoThunk}\r\n                         loading={this.props.loading}\r\n                />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        id: state.Auth.id,\r\n        status: state.profilePage.status,\r\n        loading: state.profilePage.loading\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUser: setUserProfileAC,\r\n            getProfileThunk: getProfileThunkCreator,\r\n            setStatusUserThunk: setStatusUserThunkCreator,\r\n            updateStatusUserThunk: updateStatusUserThunkCreator,\r\n            updateProfileUserThunk: updateProfileUserThunkCreator,\r\n            uploadNewPhotoThunk: uploadNewPhotoThunkCreator\r\n        }),\r\n    //withAuthRedirectHoc,\r\n    withRouter\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './../../App.css';\r\nimport s from './Header.module.css';\r\nimport userPhoto from './../../assets/images/userPhoto.png'\r\n\r\nconst Header = (props) => {\r\n    let getUserPhoto = () => {\r\n        return !props.userPhoto ? <img src={userPhoto} alt=''/> :\r\n            <img src={props.userPhoto.small} alt=''/> || <img src={props.userPhoto.large} alt={''}/>;\r\n    }\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.container}>\r\n                {props.isAuth ?\r\n                    <div className={s.loginBlock}>\r\n                        <h4>{props.login}</h4>\r\n                        {getUserPhoto()}\r\n                        <button onClick={props.logoutThunk}>Log out</button>\r\n                    </div> :\r\n                    <NavLink to='/login/' className={s.loginBlock}>\r\n                        <button className={s.loginBtn}>\r\n                            Login\r\n                        </button>\r\n                    </NavLink>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {meAPI, securityAPI} from \"../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER = 'SET_AUTH_USER';\r\nconst SET_SUCCESS_CAPTCHA = 'SET_SUCCESS_CAPTCHA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captcha: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER:\r\n        case SET_SUCCESS_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n         default :\r\n             return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserAC = (id,login,email,isAuth) => {\r\n    return {\r\n        type: SET_AUTH_USER,\r\n        data: {id,login,email,isAuth}\r\n    }\r\n}\r\nexport const setSuccessCaptchaAC = (captcha) => {\r\n    return {\r\n        type: SET_SUCCESS_CAPTCHA,\r\n        data: {captcha}\r\n    }\r\n}\r\n\r\nexport const authMeThunkCreator = () => (dispatch) => {\r\n    return meAPI.me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserAC(id, login, email,true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const loginThunkCreator = (email,password,rememberMe,captcha) => (dispatch) => {\r\n    meAPI.login(email,password,rememberMe,captcha).then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(authMeThunkCreator())\r\n        }else{\r\n            if(response.data.resultCode === 10){\r\n                dispatch(getCaptchaThunkCreator());\r\n            }\r\n            let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\",{_error: messageError}))\r\n        }\r\n    })\r\n}\r\nexport const logoutThunkCreator = () => (dispatch) => {\r\n    meAPI.logout().then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setAuthUserAC(null,null,null,false))\r\n        }\r\n    })\r\n}\r\nexport const getCaptchaThunkCreator = () => async(dispatch) => {\r\n    let response = await securityAPI.getCaptcha();\r\n    dispatch(setSuccessCaptchaAC(response.data.url))\r\n}\r\n\r\nexport default authReducer;","import {authMeThunkCreator} from \"./Auth-Reducer\";\r\nimport {ProfileAPI} from \"../Api/Api\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst INITIALIZED_USER_PHOTO = 'INITIALIZED_USER_PHOTO';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    userPhoto: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case INITIALIZED_USER_PHOTO:\r\n            return{\r\n                ...state,\r\n                userPhoto: {...action.userPhoto}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessAC = () => {\r\n    return{\r\n        type: INITIALIZED_SUCCESS\r\n    }\r\n}\r\nexport const initializedUserPhotoAC = (userPhoto) => {\r\n    return{\r\n        type: INITIALIZED_USER_PHOTO,\r\n        userPhoto\r\n    }\r\n}\r\n\r\nexport const initiliazedThunkCreator = () => (dispatch) => {\r\n    let promise = dispatch(authMeThunkCreator());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccessAC());\r\n    })\r\n}\r\nexport const initiliazedUserPhotoThunkCreator = (userId) => async(dispatch) => {\r\n    if(!userId){\r\n        //none\r\n    }else {\r\n        let promise = await ProfileAPI.getProfile(userId);\r\n        dispatch(initializedUserPhotoAC(promise.data.photos));\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkCreator} from \"../../redux/Auth-Reducer\";\r\nimport {initiliazedUserPhotoThunkCreator} from \"../../redux/App-Reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initiliazedUserPhotoThunk(this.props.id);\r\n    }\r\n    //when changing accounts, the avatar does not change, correction\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.id !== this.props.id){\r\n            if(this.props.id === null){\r\n                //none\r\n            }else {\r\n                this.props.initiliazedUserPhotoThunk(this.props.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} userPhoto={this.props.userPhoto}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth,\r\n        login: state.Auth.login,\r\n        id: state.Auth.id,\r\n        userPhoto: state.app.userPhoto\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    logoutThunk: logoutThunkCreator,\r\n    initiliazedUserPhotoThunk: initiliazedUserPhotoThunkCreator\r\n})(HeaderContainer);","\r\nexport const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Some errors';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return 'Maximum number of characters ' + maxLength;\r\n    return undefined\r\n}\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {InputAuth} from \"../../assets/FormControl/FormsControls\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../../assets/FormControl/FormsControls.module.css';\r\n\r\n//testing validate maxLength\r\n//let maxLength5 = maxLengthCreator(5);\r\n//create local form\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Email' validate={[required]} name='email' component={InputAuth}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder='Password' validate={[required]}\r\n                       name='password' type='Password' component={InputAuth}/>\r\n            </div>\r\n            <div>\r\n                <Field name='rememberMe' component=\"input\" type=\"Checkbox\"/>Remember Me\r\n            </div>\r\n            {props.error && <div className={s.someError}>{props.error}</div>}\r\n            {props.captcha && <div><img src={props.captcha} alt={''}/></div>}\r\n            {props.captcha && <div><Field placeholder='enter symbols' name='captcha' component='input'\r\n                                          validate={[required]}/></div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n//create redux-form\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        //авторизация\r\n        props.loginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login page</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n            <h3>To interact with a social network:</h3>\r\n            <ul>\r\n                <li>\r\n                    <h3>register\r\n                        <a href=\"https://social-network.samuraijs.com/signUp\" target=\"_blank\"\r\n                           rel=\"noopener noreferrer\"> here</a>\r\n                    </h3>\r\n                </li>\r\n                <li>\r\n                    <h3>\r\n                        Go to settings, take the API KEY and replace it in the\r\n                        <b style={{color: 'red'}}> src/api/Api.js</b>\r\n                    </h3>\r\n                </li>\r\n                <li>\r\n                    <h3>Log in with your account</h3>\r\n                </li>\r\n                <li>\r\n                    <h4>Also check out the request\r\n                        <a href=\"https://social-network.samuraijs.com/Default/Default/Limits\"\r\n                           target=\"_blank\" rel=\"noopener noreferrer\" style={{color:'orange'}}>{' '}\r\n                            restriction\r\n                        </a>\r\n                    </h4>\r\n                </li>\r\n\r\n            </ul>\r\n            <h3>If authorization does not work, do it\r\n                <a href=\"https://social-network.samuraijs.com/login\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>\r\n            </h3>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Login from \"./Login\";\r\nimport {getCaptchaThunkCreator, loginThunkCreator} from \"../../redux/Auth-Reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth,\r\n        captcha: state.Auth.captcha\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {\r\n    loginThunk: loginThunkCreator,\r\n    getCaptchaThunk: getCaptchaThunkCreator\r\n})(Login)\r\n\r\n","import React from 'react';\r\nimport s from '../Sidebar/Sidebar.module.css';\r\n\r\nconst SecondSidebar = (props) => {\r\n    return(\r\n        <div className={s.sidebar}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondSidebar;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Sidebar.module.css';\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <NavLink to='/Users' activeClassName={s.active}> Users </NavLink><br/>\r\n            <NavLink to='/profile/' activeClassName={s.active}> Profile </NavLink><br/>\r\n            <NavLink to='/Dialogs' activeClassName={s.active}> Dialogs </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={s.dialogUser}>\r\n            <NavLink to={`/Dialogs/messages/${props.dialog.id}`}>\r\n                <div className={s.userNameWithImg}>\r\n                    {!props.dialog.photos.small || !props.dialog.photos.large ? 'no img' :\r\n                        <img src={props.dialog.photos.small} alt=''/> || <img src={props.dialog.photos.large} alt=''/>\r\n                    }\r\n                    <h3>{props.dialog.userName}</h3>\r\n                </div>\r\n            </NavLink>\r\n            {/*<div>*/}\r\n            {/*    Has New Message: {props.dialog.hasNewMessages ? 'Yes' : 'No'}*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    Last Dialog Activity Data: {props.dialog.lastDialogActivityDate}*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    last User Activity Date: {props.dialog.lastUserActivityDate}*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                {props.dialog.newMessagesCount === 0 ? '' :\r\n                    'new Messages Count:' + props.dialog.newMessagesCount\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import {DialogsAPI, ProfileAPI} from \"../Api/Api\";\r\nimport {useDebugValue} from \"react\";\r\n\r\nconst SET_ALL_DIALOGS = 'SET_ALL_DIALOGS'\r\nconst SET_MESSAGES_WITH_FRIEND = 'SET_MESSAGES_WITH_FRIEND'\r\nconst SET_COUNT_NEW_MESSAGES = 'SET_COUNT_NEW_MESSAGES';\r\nconst SET_CURRENT_USER_IN_CHAT = 'SET_CURRENT_USER_IN_CHAT';\r\nconst SET_SUCCESS_LOADING = 'SET_SUCCESS_LOADING'\r\n\r\nlet initialState = {\r\n    listDialogs: [],\r\n    messagesWithFriend: {\r\n        items: [],\r\n        totalCount: null\r\n    },\r\n    countNesMessages: null,\r\n    currentUserInChat: [],\r\n    loading: false\r\n}\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ALL_DIALOGS:\r\n            return {\r\n                ...state,\r\n                ...state.listDialogs,\r\n                listDialogs: action.allDialogs\r\n            }\r\n        case SET_MESSAGES_WITH_FRIEND:\r\n            return {\r\n                ...state,\r\n                messagesWithFriend: {\r\n                    ...state.messagesWithFriend,\r\n                    items: action.messages\r\n                },\r\n\r\n            }\r\n        case SET_COUNT_NEW_MESSAGES:\r\n            return {\r\n                ...state,\r\n                countNesMessages: action.countNesMessages\r\n            }\r\n        case SET_CURRENT_USER_IN_CHAT:\r\n            return {\r\n                ...state,\r\n                currentUserInChat: action.profile\r\n            }\r\n        case SET_SUCCESS_LOADING: {\r\n                return{\r\n                    ...state,\r\n                    loading: action.loading\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAllDialogsAC = (allDialogs) => {\r\n    return {\r\n        type: SET_ALL_DIALOGS, allDialogs\r\n    }\r\n}\r\nexport const setCountNewMessages = (countNesMessages) => {\r\n    return {\r\n        type: SET_COUNT_NEW_MESSAGES, countNesMessages\r\n    }\r\n}\r\n\r\nexport const setCurrentUserInChatAC = (profile) => {\r\n    return {\r\n        type: SET_CURRENT_USER_IN_CHAT, profile\r\n    }\r\n}\r\n\r\n\r\nexport const setMessagesListWithFriendAC = (messages, totalCount) => {\r\n    return {\r\n        type: SET_MESSAGES_WITH_FRIEND, messages, totalCount\r\n    }\r\n}\r\n\r\nexport const setSuccessLoadingAC = (loading) => {\r\n    return{\r\n        type: SET_SUCCESS_LOADING, loading\r\n    }\r\n}\r\n\r\nexport const startChattingThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await DialogsAPI.startChatting(userId)\r\n    console.log('startChatting')\r\n    console.log(response)\r\n}\r\n\r\nexport const getAllDialogsThunkCreator = () => async (dispatch) => {\r\n    dispatch(setSuccessLoadingAC(true));\r\n    let response = await DialogsAPI.getAllDialogs()\r\n    dispatch(setSuccessLoadingAC(false));\r\n    console.log('getAllDialogs')\r\n    dispatch(setAllDialogsAC(response.data));\r\n    console.log(response.data)\r\n}\r\n\r\n\r\nexport const getListMessagesWithFriendThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await DialogsAPI.getListMessagesWithFriend(userId)\r\n    dispatch(setMessagesListWithFriendAC(response.data.items, response.data.totalCount));\r\n    console.log('getListMessagesWithFriend');\r\n    console.log(response.data)\r\n    //set current user in chat\r\n      response = await ProfileAPI.getProfile(userId)\r\n    dispatch(setCurrentUserInChatAC(response.data))\r\n    Promise.all([response]).then( values => {\r\n        dispatch(setSuccessLoadingAC(false));\r\n    })\r\n\r\n}\r\n\r\nexport const sendMessageToFriendThunkCreator = (userId, newMessage) => async (dispatch) => {\r\n    await DialogsAPI.sendMessageToFriend(userId, newMessage);\r\n    dispatch(getListMessagesWithFriendThunkCreator(userId));\r\n}\r\n\r\nexport const getListNewMessagesThunkCreator = (userId) => async (dispatch) => {\r\n    let response = await DialogsAPI.listNewMessage();\r\n    dispatch(setCountNewMessages(response.data))\r\n    console.log('getListNewMessages');\r\n    console.log(response.data)\r\n}\r\n\r\nexport const getReturnMessageDateThunkCreator = (userId,date) => async(dispatch) => {\r\n    let response = await DialogsAPI.returnMessageThanDate(userId,date);\r\n    dispatch(setMessagesListWithFriendAC(response.data));\r\n}\r\n\r\n\r\n\r\nexport default DialogsReducer;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './MessagesForm.module.css'\r\n\r\nconst MessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={s.container}>\r\n            <Field name='newMessage' placeholder='Write a message' component='input'/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ReduxMessageForm = reduxForm({form:'Message'})(MessageForm)\r\n\r\n","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {ReduxMessageForm} from \"./MessageForm\";\r\nimport userPhoto from './../../assets/images/userPhoto.png'\r\n\r\nconst Messages = (props) => {\r\n    let userId = props.match.params.userId;\r\n    let onTextInMessage = (formData) => {\r\n        props.sendMessageToFriendThunk(userId, formData.newMessage)\r\n    }\r\n    //take current user photo\r\n    let getCurrentUserPhoto = props.currentUserInChat.length === 0 ? '' :\r\n        !props.currentUserInChat.photos.large || !props.currentUserInChat.photos.small ?\r\n            <img src={userPhoto} alt={''}/> : <img src={props.currentUserInChat.photos.large} alt={''}/>;\r\n    //take auth profile photo\r\n    let getUserPhoto = !props.authUserPhoto ? ' ' :\r\n        <img src={props.authUserPhoto.small} alt={''}/> || <img src={props.authUserPhoto.large} alt={''}/>\r\n    return (\r\n        <div className={s.messagesContain}>\r\n            {props.currentUserInChat.length === 0 ? '' :\r\n                <div className={s.chatTittle}>\r\n                    <h3>{props.currentUserInChat.fullName}</h3>\r\n                    {getCurrentUserPhoto}\r\n                </div>\r\n            }\r\n            <div className={s.mainChatBlock}>\r\n                <div className={s.chatBody}>\r\n                    {props.messagesWithFriend.items.length >= 10 &&\r\n                    <button className={s.past__messages} onClick={() => {\r\n                        props.getReturnMessageDateThunk(props.currentUserInChat.userId, '2020.01.01')\r\n                    }}>\r\n                        Past messages\r\n                    </button>\r\n                    }\r\n                    {props.messagesWithFriend.items.length === 0 ? 'You don\\'t have messages with this user' :\r\n                        props.messagesWithFriend.items.map(m => <div key={m.id} className={m.viewed === true ?\r\n                            s.messagesWithFriendId : s.notViewedMessage}>\r\n                            <div className={s.main__img__username}>\r\n                                {m.senderId == userId ?\r\n                                    getCurrentUserPhoto\r\n                                    :\r\n                                    getUserPhoto\r\n                                }\r\n                                <h4>{m.senderName}</h4>\r\n                            </div>\r\n                            {/*<div>Id: {m.id}</div>*/}\r\n                            {/*check read message*/}\r\n                            {/*<div>AddedAt: {m.addedAt}</div>*/}\r\n                            {/*<div>SenderId: {m.senderId}</div>*/}\r\n                            {/*<div>recipientId: {m.recipientId}</div>*/}\r\n                            <div className={s.chatText}>{m.body}</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ReduxMessageForm onSubmit={onTextInMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getListMessagesWithFriendThunkCreator, getReturnMessageDateThunkCreator, sendMessageToFriendThunkCreator,\r\n} from \"../../redux/Dialogs-Reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\nconst MessagesContainer = (props) => {\r\n    let userId = props.match.params.userId;\r\n    useEffect(() => {\r\n        props.getListMessagesWithFriendThunk(userId)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[props.match.params.userId]);\r\n    return(\r\n            <Messages {...props} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesWithFriend: state.dialogs.messagesWithFriend,\r\n        listDialogs: state.dialogs.listDialogs,\r\n        currentUserInChat: state.dialogs.currentUserInChat,\r\n        authUserPhoto: state.app.userPhoto\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps,{\r\n        getListMessagesWithFriendThunk: getListMessagesWithFriendThunkCreator,\r\n        sendMessageToFriendThunk: sendMessageToFriendThunkCreator,\r\n        getReturnMessageDateThunk: getReturnMessageDateThunkCreator\r\n    })\r\n)(MessagesContainer)\r\n","import React from 'react';\r\nimport Dialog from \"./Dialog\";\r\nimport MessagesContainer from \"./MessagesContainer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport s from './Dialogs.module.css'\r\nimport Preloader from \"../../assets/preloader/Preloader\";\r\n\r\nconst Dialogs = (props) => {\r\n    if(props.loading){\r\n        return <Preloader/>\r\n    }\r\n    return(\r\n        <div className={s.containerDialog}>\r\n            {/*Dialogs*/}\r\n            {/*<div><button onClick={()=> {props.startChattingThunk(2)}}>StartChatting</button></div>*/}\r\n            {/*with user with id 2*/}\r\n            <div className={s.listDialogs}>\r\n                    {props.listDialogs.length === 0 ? <div>No dialogs</div> :\r\n                        props.listDialogs.map(dialog => <Dialog dialog={dialog} key={dialog.id}/>)}\r\n            </div>\r\n            <Route path='/Dialogs/messages/:userId?' render={() => <MessagesContainer/>}/>\r\n            {/*<h3>Get list new Messages count</h3>*/}\r\n            {/*<button onClick={()=>{props.getListNewMessagesThunk()}}>get</button>*/}\r\n            {/*<div>*/}\r\n            {/*    {!props.countNesMessages ? 'Count: 0' :*/}\r\n            {/*        'Count:' + props.countNesMessages*/}\r\n            {/*    }*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {useEffect} from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getAllDialogsThunkCreator,\r\n    getListMessagesWithFriendThunkCreator,\r\n    getListNewMessagesThunkCreator,\r\n    sendMessageToFriendThunkCreator,\r\n    startChattingThunkCreator\r\n} from \"../../redux/Dialogs-Reducer\";\r\nimport {compose} from \"redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    useEffect(()=>{\r\n        props.getAllDialogsThunk();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    if(!props.id){\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return(\r\n        <Dialogs {...props}/>\r\n    )\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        listDialogs: state.dialogs.listDialogs,\r\n        messagesWithFriend: state.dialogs.messagesWithFriend,\r\n        countNesMessages: state.dialogs.countNesMessages,\r\n        id: state.Auth.id,\r\n        loading: state.dialogs.loading\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps,{\r\n        startChattingThunk:startChattingThunkCreator,\r\n        getAllDialogsThunk: getAllDialogsThunkCreator,\r\n        getListMessagesWithFriendThunk: getListMessagesWithFriendThunkCreator,\r\n        sendMessageToFriendThunk: sendMessageToFriendThunkCreator,\r\n        getListNewMessagesThunk: getListNewMessagesThunkCreator\r\n    })\r\n)(DialogsContainer)\r\n","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport {Route} from \"react-router\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport {LoginContainer} from \"./Components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {initiliazedThunkCreator} from \"./redux/App-Reducer\";\r\nimport Preloader from \"./assets/preloader/Preloader\";\r\nimport SecondSidebar from \"./Components/SecondSidebar/SecondSidebar\";\r\nimport Sidebar from \"./Components/Sidebar/SIdebar\";\r\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\n\r\n\r\n//import UsersContainer from \"./Components/Users/UsersContainer\";\r\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n     catchAllUnhandelErrors = (promiseRejectionEvent) => {\r\n         alert(promiseRejectionEvent.reason.message);\r\n         console.log(promiseRejectionEvent)\r\n     }\r\n\r\n    componentDidMount() {\r\n        this.props.initiliazedThunk();\r\n        window.addEventListener(\"unhandledrejection\",this.catchAllUnhandelErrors)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderContainer/>\r\n                <div className=\"mainApp\">\r\n                    <Sidebar/>\r\n                    <Route\r\n                        path='/Users'\r\n                        render={() => {\r\n                            return <Suspense fallback={<Preloader/>}>\r\n                                <UsersContainer/>\r\n                            </Suspense>\r\n                        }\r\n                        }/>\r\n                    <Route exact path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                    <Route path='/Login' render={() => <LoginContainer/>}/>\r\n                    <Route path='/Dialogs' render={() => <DialogsContainer/>}/>\r\n                    {/*<Route path='/messages/:userId?' render={() => <MessagesContainer/>}/>*/}\r\n                    <SecondSidebar/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        initiliazedThunk: initiliazedThunkCreator\r\n    }),\r\n    withRouter\r\n)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport UsersPageReducer from \"./UsersPage-Reducer\";\r\nimport profilePageReducer from \"./ProfilePage-Reducer\";\r\nimport authReducer from \"./Auth-Reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport {appReducer} from \"./App-Reducer\";\r\nimport DialogsReducer from \"./Dialogs-Reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    userPage: UsersPageReducer,\r\n    profilePage: profilePageReducer,\r\n    Auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    dialogs: DialogsReducer\r\n})\r\n\r\n//extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/store-redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n<HashRouter basename={process.env.PUBLIC_URL}>\r\n<Provider\r\nstore = {store} >\r\n    <App />\r\n    </Provider>\r\n    </HashRouter>\r\n    , document.getElementById('root')\r\n)\r\n;\r\n\r\n//Убрали наш render() так как connect решает эту проблему сам\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloadImg from './preloader.svg'\r\nimport s from './preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloadContain}>\r\n            <img src={preloadImg} className={s.preloader} alt=''/>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__TptBE\",\"active\":\"Sidebar_active__2hker\"};","module.exports = __webpack_public_path__ + \"static/media/userPhoto.a8d8ecba.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Header_loginBlock__1_xZL\",\"loginBtn\":\"Header_loginBtn__1ac0T\",\"container\":\"Header_container__3Q_00\",\"header\":\"Header_header__2oa4e\",\"active\":\"Header_active__1VMX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2qVkc\",\"preloadContain\":\"preloader_preloadContain__X74Uf\"};"],"sourceRoot":""}